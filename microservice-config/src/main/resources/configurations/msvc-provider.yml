server:
  # To avoid colliding with other apps in port 8080
  port: 9090
  forward-headers-strategy: framework

eureka:
  client:
    # To report to Eureka when this service is up
    registerWithEureka: true
    # Eureka server URL
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
  instance:
    # To avoid using DNS
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}

spring:
  data:
    mongodb:
      uri: 'mongodb+srv://alejo:AleJO2172602@cluster0.xxkxg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'
      database: 'servicios'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/microservice-provider
          jwk-set-uri: http://localhost:8081/realms/microservice-provider/protocol/openid-connect/certs

springdoc:
  swagger-ui:
    path: /api/provider/swagger-ui
#security:
#  trusted-token: my-secret-token

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true